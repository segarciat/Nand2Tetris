// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

    // Conditionally reset counter.
    Mux16(a=prein, b=false, sel=reset, out=rout);

    // Conditionally load with new input.
    Not(in=reset, out=notreset);
    And(a=notreset, b=load, out=doload);
    Mux16(a=rout, b=in, sel=doload, out=lout);

    // Conditionally increment.
    Or(a=reset, b=load, out=reload);
    Not(in=reload, out=notreload);
    And(a=notreload, b=inc, out=doinc);

    Inc16(in=lout, out=iout);
    Mux16(a=lout, b=iout, sel=doinc, out=preout);

    // Conditionally change register value.
    Or(a=inc, b=reload, out=dochange);
    Register(in=preout, load=dochange, out=prein);

    // This is the previous value, not the output from above.
    And16(a=prein, b=true, out=out);
}
