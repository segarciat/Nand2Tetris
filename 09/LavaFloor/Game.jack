/** 
* Implements the Floor Is Lava game.
* Based on an all-time kids favorite, the game consists of
* a player whose sole goal is to survive. The player starts
* on top of a platform that starts diminishing in size as
* as soon as it is touched. If a platform isn't below a player,
* then the player will fall and lose. As an added challenge,
* an enemy will hover near the top of the map, dropping rocks
* that immediately end the game for the player if they are to
* hit. Once the game ends, a score is displayed based on how
* many platforms the player jumped on, and how long the player
* survived. The player moves with the arrow keys, jumps with the
* 'spacebar', and pauses the game with 'p'. To exit the game,
* the player can press 'q'.
*/

class Game {
  field int SCREEN_WIDTH;
  field int SCREEN_HEIGHT;
  field boolean gameOver;
  field boolean isPaused;
  field Mob mob;
  field Player player;

  constructor Game new() {
    let SCREEN_WIDTH = 512;
    let SCREEN_HEIGHT = 256;
    let gameOver = false;
    let isPaused = false;

    // Center player and pass platforms.
    let player = Player.new(Math.divide(SCREEN_WIDTH, 2), Math.divide(SCREEN_HEIGHT, 2));
    let mob = Mob.new();
    do player.draw();
    return this;
  }

  // Free memory for all game objects.
  method void dispose() {
    do player.dispose();
    do mob.dispose();
    do Memory.deAlloc(this);
    return;
  }

  method boolean isCollision() {
    if(mob.getX() > (player.getX() + player.getWidth())){
      return false;
    }

    if(player.getX() > (mob.getX() + mob.getSize())) {
      return false;
    }

    if(mob.getY() > (player.getY() + player.getHeight())){
      return false;
    }

    if(player.getY() > (mob.getY() + mob.getSize())) {
      return false;
    }

    return true;
  }

  method void run() {
    var char key;
    while(~gameOver) {
      // ------- Get input ----------
      let key = Keyboard.keyPressed();
      // Check for game quit through 'q'.
      if(key=81) {let gameOver = true;}
      // Check for game pause through 'p'
      if(key=80) {
         let isPaused = ~isPaused;
         // Wait until player lets go of P.
         while (~(key = 0)) {
          let key = Keyboard.keyPressed();
         }
      }

      // Take input and update only if not paused.
      if(~isPaused){
        // Stop player's x
        do player.stop();
        // Check left arrow key and A
        if((key=132) | (key=68)) {do player.moveRight();}
        // Check right arrow key and D
        if((key=130) | (key=65)) {do player.moveLeft();}
        // Check for spacebar for jump.
        if(key=32) {do player.jump();}
        
        do player.update();
        do mob.move();
        if(mob.getX() < 10) {
          do mob.reset();
        }

        if(isCollision()){
          let gameOver = true;
        }
      }
    }
    return;
  }
}